; Copyright (C) IBM Corporation 2018
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;      http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.

[supervisord]
logfile=/tmp/supervisord.log
pidfile=/tmp/supervisord.pid
nodaemon=true

[program:rqworker]
; Point the command to the specific rq command you want to run.
; If you use virtualenv, be sure to point it to
; /path/to/virtualenv/bin/rq
; Also, you probably want to include a settings module to configure this
; worker.  For more info on that, see http://python-rq.org/docs/workers/
command=/opt/conda/bin/rq worker default -u redis://:%(ENV_REDIS_PW)s@%(ENV_REDIS_IP)s:6379/0

; process_name is required if you specify >1 numprocs
process_name=%(program_name)s-%(process_num)s

; Number of worker instances to run simultaneously
numprocs=%(ENV_NUMPROC)s

; This is the directory from which RQ is ran. Be sure to point this to the
; directory where your source code is importable from
directory=/root/worker

; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
stopsignal=TERM

; These are up to you
autostart=true
autorestart=true